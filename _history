{"entries":[{"timestamp":1741895740535,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":227,"start2":227,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"from microbit import *\n\n# Coordenadas iniciais da bolinha\nx = 0\ny = 0\n\n# Desenha o labirinto (1s são paredes, 0s são caminhos)\nlabirinto = [\n    [0, 1, 1, 1, 1],\n    [0, 0, 1, 1, 1],\n    [1, 0, 1, 1, 1],\n    [1, 0, 0, 0, 0],\n    [1, 1, 1, 1, 0]\n]\n\ndef desenhar_labirinto():\n    for i in range(5):\n        for j in range(5):\n            if labirinto[j][i] == 1:\n                display.set_pixel(i, j, 2)  # Paredes com brilho médio\n\ndef atualizar_bolinha():\n    display.set_pixel(x, y, 9)  # Bolinha com brilho máximo\n\nwhile True:\n    desenhar_labirinto()\n    atualizar_bolinha()\n    \n    sleep(200)\n    display.clear()\n    \n    desenhar_labirinto()  # Desenhar novamente o labirinto após limpar a tela\n\n    # Lê a inclinação do acelerômetro\n    if accelerometer.get_x() > 200 and x < 4 and labirinto[y][x + 1] == 0:\n        x += 1\n    elif accelerometer.get_x() < -200 and x > 0 and labirinto[y][x - 1] == 0:\n        x -= 1\n    elif accelerometer.get_y() > 200 and y < 4 and labirinto[y + 1][x] == 0:\n        y += 1\n    elif accelerometer.get_y() < -200 and y > 0 and labirinto[y - 1][x] == 0:\n        y -= 1\n\n    # Verifica se chegou ao ponto final\n    if x == 4 and y == 4:\n        display.scroll(\"Venceu!\")\n        break\n\n"}]},{"timestamp":1741895864736,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]}]},{"timestamp":1742480378842,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":254,"start2":254,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// testes vão aqui; isto não será compilado quando este pacote for usado como uma extensão.\n"}]}],"snapshots":[{"timestamp":1741895740534,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"labirinto em led\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1742480378842,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"from microbit import *\n\n# Coordenadas iniciais da bolinha\nx = 0\ny = 0\n\n# Desenha o labirinto (1s são paredes, 0s são caminhos)\nlabirinto = [\n    [0, 1, 1, 1, 1],\n    [0, 0, 1, 1, 1],\n    [1, 0, 1, 1, 1],\n    [1, 0, 0, 0, 0],\n    [1, 1, 1, 1, 0]\n]\n\ndef desenhar_labirinto():\n    for i in range(5):\n        for j in range(5):\n            if labirinto[j][i] == 1:\n                display.set_pixel(i, j, 2)  # Paredes com brilho médio\n\ndef atualizar_bolinha():\n    display.set_pixel(x, y, 9)  # Bolinha com brilho máximo\n\nwhile True:\n    desenhar_labirinto()\n    atualizar_bolinha()\n    \n    sleep(200)\n    display.clear()\n    \n    desenhar_labirinto()  # Desenhar novamente o labirinto após limpar a tela\n\n    # Lê a inclinação do acelerômetro\n    if accelerometer.get_x() > 200 and x < 4 and labirinto[y][x + 1] == 0:\n        x += 1\n    elif accelerometer.get_x() < -200 and x > 0 and labirinto[y][x - 1] == 0:\n        x -= 1\n    elif accelerometer.get_y() > 200 and y < 4 and labirinto[y + 1][x] == 0:\n        y += 1\n    elif accelerometer.get_y() < -200 and y > 0 and labirinto[y - 1][x] == 0:\n        y -= 1\n\n    # Verifica se chegou ao ponto final\n    if x == 4 and y == 4:\n        display.scroll(\"Venceu!\")\n        break\n\n","pxt.json":"{\n    \"name\": \"labirinto em led\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1742480378875}